import { test, expect } from "@playwright/test";

test("‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° loan ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö dialog ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå", async ({ page }) => {
  await page.goto("http://localhost:30080/loan");


  await page.getByLabel("Full Name").fill("‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ");


  await page.getByLabel("üìû Phone Number").fill("0891234567");


  await page.getByLabel("Monthly Income").fill("30000");


  await page.getByLabel("Loan Amount").fill("100000");


  await page.getByLabel("Loan Purpose").click(); 
  await page.getByRole("option", { name: "Home" }).click(); 


  await page.getByLabel("Age").fill("35");


  await page.getByLabel("Email").fill("somchai@example.com");


  await page.getByRole("button", { name: /submit/i }).click();

 
  const dialog = page.locator("mat-dialog-container");


  await expect(dialog).toContainText(/eligible|not eligible/i);
});


test("‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á error", async ({ page }) => {
  await page.goto("http://localhost:30080/loan");
  
  // ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢ ‡πÅ‡∏•‡πâ‡∏ß submit
  await page.getByRole("button", { name: /submit/i }).click();

  const errors = page.locator('mat-error');
  const count = await errors.count();

  expect(count).toBeGreaterThan(0); 
});

test("‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á error ‡∏´‡∏•‡∏≤‡∏¢‡∏à‡∏∏‡∏î", async ({ page }) => {
  await page.goto("http://localhost:30080/loan");
  await page.getByRole("button", { name: /submit/i }).click();

  const errors = page.locator("mat-error");
  const count = await errors.count();
  expect(count).toBeGreaterThan(0);

  // Optional: ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  for (let i = 0; i < count; i++) {
    console.log(await errors.nth(i).textContent());
  }
});

test("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö 10 ‡∏´‡∏•‡∏±‡∏Å ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á error", async ({ page }) => {
  await page.goto("http://localhost:30080/loan");

  await page.getByLabel("üìû Phone Number").fill("08123"); // ‡∏™‡∏±‡πâ‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
  await page.getByRole("button", { name: /submit/i }).click();

  const error = page.locator("mat-error", { hasText: "10 digits" });
  await expect(error).toBeVisible();
});

test("Loan Amount ‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô 12 ‡πÄ‡∏ó‡πà‡∏≤‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô dialog ‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô", async ({ page }) => {
  await page.goto("http://localhost:30080/loan");

  await page.getByLabel("Full Name").fill("‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ");
  await page.getByLabel("üìû Phone Number").fill("0891234567");
  await page.getByLabel("Monthly Income").fill("10000");
  await page.getByLabel("Loan Amount").fill("150000"); // ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 120000
  await page.getByLabel("Loan Purpose").click();
  await page.getByRole("option", { name: /home/i }).click();
  await page.getByLabel("Age").fill("35");
  await page.getByLabel("Email").fill("somchai@example.com");

  await page.getByRole("button", { name: /submit/i }).click();

  const dialog = page.locator("mat-dialog-container");
  await expect(dialog).toBeVisible();
  await expect(dialog).toContainText("Loan amount cannot exceed 12 months of income");
});

